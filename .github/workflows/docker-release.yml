name: Docker Release & Version Management

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha,prefix={{branch}}-
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ steps.version.outputs.VERSION }}
          BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          
    - name: Create Docker Compose for release
      run: |
        sed "s|neo4j:5.15-community|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}|g" docker-compose.yml > docker-compose-release.yml
        
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          docker-compose-release.yml
          README.md
          .env.example
        body: |
          ## Business Integrations Graph ${{ steps.version.outputs.VERSION }}
          
          ### ðŸ“¦ Docker Images
          - **GitHub Registry**: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}`
          - **Multi-platform**: linux/amd64, linux/arm64
          
          ### ðŸš€ Quick Start
          ```bash
          # Download release files
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/docker-compose-release.yml
          wget https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.VERSION }}/.env.example
          
          # Configure environment
          cp .env.example .env
          # Edit .env with your settings
          
          # Start the system
          docker-compose -f docker-compose-release.yml up -d
          ```
          
          ### ðŸ“Š Metrics
          - **Build Date**: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          - **Git SHA**: ${{ steps.version.outputs.SHORT_SHA }}
          - **Size**: Multi-architecture optimized
          
          ### ðŸ”„ Version Policy
          This release follows semantic versioning and includes automated cleanup of old versions.

  cleanup-old-versions:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Cleanup old package versions
      uses: actions/delete-package-versions@v4
      with:
        package-name: ${{ env.IMAGE_NAME }}
        package-type: 'container'
        min-versions-to-keep: 10
        delete-only-untagged-versions: false
        ignore-versions: '^v\d+\.\d+\.\d+$'
        
  update-docs:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update README with new version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        sed -i "s|ghcr.io/${{ github.repository }}:.*|ghcr.io/${{ github.repository }}:${VERSION}|g" README.md
        
    - name: Commit updated README
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git diff --staged --quiet || git commit -m "docs: update version to ${GITHUB_REF#refs/tags/}"
        git push